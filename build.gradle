plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.1'
	id 'io.spring.dependency-management' version '1.1.0'
	id "org.openapi.generator" version "6.2.1"
	id 'jacoco'
}

group = 'com.portfolio'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'io.swagger.core.v3:swagger-annotations:2.2.8'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0'
	implementation 'org.webjars:jquery:3.6.4'
	implementation 'org.webjars:bootstrap:5.2.3'
    implementation 'org.jetbrains:annotations:24.0.1'
	implementation 'junit:junit:4.13.2'
	implementation 'mysql:mysql-connector-java:8.0.32'
	implementation 'org.projectlombok:lombok:1.18.26'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.assertj:assertj-core:3.24.2'
	testImplementation 'org.mockito:mockito-core:4.2.0'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.1'
	testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
	implementation 'org.springframework:spring-context-support:6.0.6'
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	implementation 'org.jacoco:org.jacoco.agent:0.8.8'
	testImplementation 'org.dbunit:dbunit:2.7.3'
	testImplementation 'com.github.database-rider:rider-junit5:1.36.0'
	testImplementation 'com.github.springtestdbunit:spring-test-dbunit:1.3.0'
	implementation 'com.sun.mail:jakarta.mail:2.0.1'
	implementation 'com.oracle.database.jdbc:ojdbc8:19.3.0.0'

	modules {
		module('org.springframework.boot:spring-boot-starter-logging') {
			replacedBy('org.springframework.boot:spring-boot-starter-log4j2', 'Use Log4j2 instead of Logback')
		}
	}
}

tasks.named('test') {
	// JUnit platform を使う設定
	useJUnitPlatform()

	testLogging {
		// テスト時の標準出力と標準エラー出力を表示する
		showStandardStreams true
		// イベントを出力する (TestLogEvent)
		events 'started', 'skipped', 'passed', 'failed'
		// 例外発生時の出力設定 (TestExceptionFormat)
		exceptionFormat 'full'
	}

}

task buildApiDoc(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask){
	generatorName = "html2"
	inputSpec = "$rootDir/src/main/resources/api-schema.yaml".toString()
	outputDir = "$buildDir/apidoc".toString()
}

task buildSpringServer(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask){
	generatorName = "spring"
	inputSpec = "$rootDir/src/main/resources/api-schema.yaml".toString()
	outputDir = "$buildDir/spring".toString()
	apiPackage = "com.portfolio.ecsite.controller"
	modelPackage = "com.portfolio.ecsite.model"
	configOptions = [
			interfaceOnly: "true"
	]
}

compileJava.dependsOn tasks.buildSpringServer
sourceSets.main.java.srcDir "$buildDir/spring/src/main/java"