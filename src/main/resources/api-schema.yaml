openapi: "3.0.0"
info:
  title: ec-site API Document
  version: "0.0.1"
  description: "ec-site API のドキュメントです"
tags:
  - name: items
    description: 商品関連のAPI
paths:
  /items:
    get:
      summary: "商品一覧の取得"
      description: "商品の一覧を取得できます"
      operationId: "listItems"
      tags:
        - items
      parameters:
        - name: limit
          in: query
          required: true
          description: "リソースに含まれるリソースの最大値"
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 100
            default: 10
        - name: offset
          in: query
          required: ture
          description: "オフセット"
          schema:
            type: integer
            format: int64
            minimum: 0
            default: 0
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ItemListDTO"
        '400':
          description: "Bad Resuest"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"

    post:
      summary: "商品の作成"
      description: "商品を新規作成します"
      operationId: "createItem"
      tags:
        - items
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ItemForm"
      responses:
        201:
          description: "Created"
          headers:
            location:
              description: "作成したリソースのURI"
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ItemDTO"
        400:
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
  /items/{itemId}:
    get:
      summary: "商品の取得"
      description: "指定されたIDの商品を１件取得します。"
      tags:
        - items
      operationId: showItem
      parameters:
        - name: itemId
          in: path
          required: true
          description: "詳細を取得する商品のID"
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ItemDTO"
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundError"
    put:
      summary: "商品変更"
      description: "指定された商品をリクエストボディの内容で上書きします"
      operationId: "editItem"
      tags:
        - items
      parameters:
        - name: itemId
          in: path
          required: true
          description: "更新する商品のID"
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ItemForm"
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ItemDTO"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
components:
  schemas:
    ItemForm:
      type: object
      properties:
        itemName:
          type: string
          description: "作成される商品の名前"
          maxLength: 20
          minLength: 1
        description:
          type: string
          description: "作成される商品の詳細"
          maxLength: 100
          minLength: 1
        company:
          type: string
          description: "作成される販売会社"
          maxLength: 20
          minLength: 1
        price:
          type: int
          description: "作成される商品価格（円）"
          maxLength: 10
          minLength: 1
        stock:
          type: int
          description: "作成される在庫数（個）"
          maxLength: 10
          minLength: 1
      required:
        - itemName
        - description
        - company
        - price
        - stock
    ItemDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: "商品ID"
        itemName:
          type: string
          description: "商品名"
        description:
          type: string
          description: "商品概要"
        company:
          type: string
          description: "販売会社"
        price:
          type: integer
          format: int32
          description: "販売価格（円）"
        stock:
          type: integer
          format: int32
          description: "在庫数（個）"
      required:
        - id
        - itemName
        - description
        - company
        - price
        - stock
    PageDTO:
      description: "ページング情報"
      type: object
      properties:
        limit:
          description: "リクエストされた limit"
          type: integer
          format: int32
        offset:
          description: "リクエストされた offset"
          type: integer
          format: int64
        size:
          description: "取得できた件数"
          type: integer
          format: int32
    ItemListDTO:
      description: "商品のリスト"
      type: object
      properties:
        page:
          $ref: "#/components/schemas/PageDTO"
        results:
          type: array
          items:
            $ref: "#/components/schemas/ItemDTO"
      required:
        - results
    ResourceNotFoundError:
      description: "指定したリソースが存在しない"
      type: object
      properties:
        title:
          type: string
          description: "エラーのタイトル"
          default: "Resource Not Found"
        detail:
          type: string
          description: "エラーの詳細"
      required:
        - title
        - detail
    BadRequestError:
      description: "リクエストが不正"
      type: object
      properties:
        title:
          type: string
          description: "エラーのタイトル"
          default: "Bad Request"
        detail:
          type: string
          description: "エラーの詳細"
          default: "リクエストが不正です。正しいリクエストでリトライしてください"
        invalid-params:
          type: array
          items:
            $ref: "#/components/schemas/InvalidParam"
      required:
        - title
        - detail
        - invalid-params
    InvalidParam:
      description: "不正なリクエストについての詳細"
      type: object
      properties:
        name:
          type: string
          description: "エラーが発生したフィールド名"
        reason:
          type: string
          description: "エラーの理由"
      required:
        - name
        - reason